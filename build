#!/bin/sh

set -e -x

WORK="${HOME}/work"
KERNEL_SRC="${WORK}/kernel-msm"
CLANG_TAR_URL="https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android11-release/clang-r383902.tar.gz"

BINUTILS_GIT="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9" 

BINUTILS_32_GIT="https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9"

KERNEL_SOURCE_URL="https://github.com/EastOrrerySunSoft/kernel_xiaomi_cepheus_aosp"

ANYKERNEL_GIT="https://github.com/thecatvoid/AnyKernel3.git"

mkdir -p "${WORK}"
cd "${WORK}" || exit 1

# Setup stuff
if [ ! -d clang ]; then mkdir clang && curl -Lsq "${CLANG_TAR_URL}" -o clang.tgz && tar -xzf clang.tgz -C clang; fi
[ ! -d binutils ] && git clone --depth=1 "${BINUTILS_GIT}" -b android11-release binutils
[ ! -d binutils-32 ] && git clone --depth=1 "${BINUTILS_32_GIT}" -b android11-release binutils-32
[ ! -d kernel-msm ] && git clone --depth=1 "${KERNEL_SOURCE_URL}" kernel-msm

# Set toolchain path
PATH="${WORK}/clang/bin:${WORK}/binutils/bin:${WORK}/binutils-32/bin:/bin"

# Build kernel
cd "${KERNEL_SRC}" || exit 1

# Android cross compile make function
make_fun() {
	make O=out ARCH=arm64 \
		CC=clang HOSTCC=clang \
		CLANG_TRIPLE=aarch64-linux-gnu- \
		CROSS_COMPILE=aarch64-linux-android- \
		CROSS_COMPILE_ARM32=arm-linux-androideabi- "$@" 
}

# Make defconfig
make_fun cepheus_defconfig

# Make kernel
make_fun -j"$(nproc --all)" || make_fun -j1

# Upload built kernel
cd "${WORK}" || exit
[ ! -d ANY ] && git clone --depth=1 "${ANYKERNEL_GIT}" ANY
cd ANY || exit 1
cp "${KERNEL_SRC}/out/arch/arm64/boot/*" ./
dates="$(date +%F+%T%z)"
zip -r9 "${dates}.zip" ./* -x .git README.md ./*placeholder
curl -T "${dates}.zip" temp.sh
